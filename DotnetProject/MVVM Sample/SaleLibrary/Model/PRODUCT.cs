//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SaleLibrary.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class PRODUCT : IDataErrorInfo
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public PRODUCT()
        {
            this.ACCOUNTs = new HashSet<ACCOUNT>();
        }
        [Required(ErrorMessage = "Vui lòng nhập vào mã sản phẩm")]
        [StringLength(10, MinimumLength = 1,
        ErrorMessage = "Số lượng ký tự tối thiểu là 1 và tối đa là 10 ký tự")]

        public string PRODUCT_CD { get; set; }
        public Nullable<System.DateTime> DATE_OFFERED { get; set; }
        public Nullable<System.DateTime> DATE_RETIRED { get; set; }

        [Required(ErrorMessage = "Bạn phải nhập vào tên.")]
        public string NAME { get; set; }
        public string PRODUCT_TYPE_CD { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ACCOUNT> ACCOUNTs { get; set; }
        public virtual PRODUCT_TYPE PRODUCT_TYPE { get; set; }

        public string Error
        {
            get
            {
                return (this as IDataErrorInfo).Error;
                
            }
        }

        public string this[string columnName]
        {
            get
            {
                string ValidationResult = null;
                switch (columnName)
                {
                    case "PRODUCT_CD":
                        ValidationResult = ValidateProductCD();
                        break;
                    case "NAME":
                        ValidationResult = ValidateName();
                        break;
                }
                return ValidationResult;

            }
        }
        private string ValidateProductCD()
        {
            if (String.IsNullOrEmpty(this.PRODUCT_CD))
                return "Bạn cần nhập vào mã sản phẩm";
            if (this.PRODUCT_CD.Length == 1)
                return "Mã sản phẩm phải lớn hơn 1 ký tự";
            return string.Empty;
        }
        private string ValidateName()
        {
            if (String.IsNullOrEmpty(this.NAME))
                return "Bạn cần nhập vào tên sản phẩm";
            return string.Empty;
        }
    }
}
